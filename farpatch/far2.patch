diff -Nur fardev.orig/build.bat fardev/build.bat
--- fardev.orig/build.bat	Thu Jan  1 02:00:00 1970
+++ fardev/build.bat	Sat Feb 28 02:27:51 2009
@@ -0,0 +1,6 @@
+call setenv /x86
+nmake -f build.mak
+@if errorlevel 1 goto end
+call setenv /x64
+nmake -f build.mak
+:end
diff -Nur fardev.orig/build.mak fardev/build.mak
--- fardev.orig/build.mak	Thu Jan  1 02:00:00 1970
+++ fardev/build.mak	Sat Feb 28 02:27:51 2009
@@ -0,0 +1,71 @@
+!if "$(CPU)"=="AMD64" 
+suffix=64
+distrsuffix=_x64
+!else
+suffix=32
+!endif
+
+build:
+	cd unicode_far
+	nmake -f makefile_vc MP=/MP
+	cd ..\misc\fexcept
+	nmake -f makefile_vc WIDE=1 MP=/MP
+	cd ..\..\plugins
+	nmake -f makefile_all_vc WIDE=1 MP=/MP
+	cd multiarc
+	nmake -f makefile_vc MP=/MP
+	cd ..\ftp
+	nmake -f makefile_vc MP=/MP
+	cd ..\..
+	echo \obj\ > .exclude
+	echo .lib >> .exclude
+	echo .exp >> .exclude
+	echo .pdb >> .exclude
+	xcopy unicode_far\Release.$(suffix).vc\* bin$(suffix) /i /y /exclude:.exclude
+	xcopy unicode_far\LICENSE bin$(suffix) /i /y
+	xcopy unicode_far\README-EN bin$(suffix) /i /y
+	xcopy unicode_far\README-RU bin$(suffix) /i /y
+	xcopy misc\fexcept\final.$(suffix)W.vc\*.dll bin$(suffix) /i /y
+	xcopy misc\fexcept\final.$(suffix)W.vc\SetFarExceptionHandlerW.reg bin$(suffix) /i /y
+	xcopy plugins\align\final.$(suffix)W.vc\* bin$(suffix)\plugins\align /e /i /y /exclude:.exclude
+	xcopy plugins\autowrap\final.$(suffix)W.vc\* bin$(suffix)\plugins\autowrap /e /i /y /exclude:.exclude
+	xcopy plugins\brackets\final.$(suffix)W.vc\* bin$(suffix)\plugins\brackets /e /i /y /exclude:.exclude
+	xcopy plugins\compare\final.$(suffix)W.vc\* bin$(suffix)\plugins\compare /e /i /y /exclude:.exclude
+	xcopy plugins\drawline\final.$(suffix)W.vc\* bin$(suffix)\plugins\drawline /e /i /y /exclude:.exclude
+	xcopy plugins\editcase\final.$(suffix)W.vc\* bin$(suffix)\plugins\editcase /e /i /y /exclude:.exclude
+	xcopy plugins\emenu\final.$(suffix)W.vc\* bin$(suffix)\plugins\emenu /e /i /y /exclude:.exclude
+	xcopy plugins\farcmds\final.$(suffix)W.vc\* bin$(suffix)\plugins\farcmds /e /i /y /exclude:.exclude
+	xcopy plugins\filecase\final.$(suffix)W.vc\* bin$(suffix)\plugins\filecase /e /i /y /exclude:.exclude
+	xcopy plugins\ftp\final.$(suffix).vc\* bin$(suffix)\plugins\ftp /e /i /y /exclude:.exclude
+	xcopy plugins\hlfviewer\final.$(suffix)W.vc\* bin$(suffix)\plugins\hlfviewer /e /i /y /exclude:.exclude
+	xcopy plugins\macroview\final.$(suffix)W.vc\* bin$(suffix)\plugins\macroview /e /i /y /exclude:.exclude
+	xcopy plugins\multiarc\final.$(suffix).vc\* bin$(suffix)\plugins\multiarc /e /i /y /exclude:.exclude
+	xcopy plugins\network\final.$(suffix)W.vc\* bin$(suffix)\plugins\network /e /i /y /exclude:.exclude
+	xcopy plugins\proclist\final.$(suffix)W.vc\* bin$(suffix)\plugins\proclist /e /i /y /exclude:.exclude
+	xcopy plugins\tmppanel\final.$(suffix)W.vc\* bin$(suffix)\plugins\tmppanel /e /i /y /exclude:.exclude
+	del .exclude
+	echo m4_include(`farversion.m4')m4_dnl > distr.bat.m4
+	echo 7z a -mx=9 `far_'MAJOR`.'MINOR`.'BUILD`_uni$(distrsuffix)_ntfsfile.7z' .\bin$(suffix)\* >> distr.bat.m4
+	m4 -P -I unicode_far distr.bat.m4 > distr.bat
+	call distr.bat
+	del distr.bat*
+
+clean:
+	del /s /q unicode_far\Release.$(suffix).vc
+	del /s /q misc\fexcept\final.$(suffix)W.vc
+	del /s /q plugins\align\final.$(suffix)W.vc
+	del /s /q plugins\autowrap\final.$(suffix)W.vc
+	del /s /q plugins\brackets\final.$(suffix)W.vc
+	del /s /q plugins\compare\final.$(suffix)W.vc
+	del /s /q plugins\drawline\final.$(suffix)W.vc
+	del /s /q plugins\editcase\final.$(suffix)W.vc
+	del /s /q plugins\emenu\final.$(suffix)W.vc
+	del /s /q plugins\farcmds\final.$(suffix)W.vc
+	del /s /q plugins\filecase\final.$(suffix)W.vc
+	del /s /q plugins\ftp\final.$(suffix).vc
+	del /s /q plugins\hlfviewer\final.$(suffix)W.vc
+	del /s /q plugins\macroview\final.$(suffix)W.vc
+	del /s /q plugins\multiarc\final.$(suffix).vc
+	del /s /q plugins\network\final.$(suffix)W.vc
+	del /s /q plugins\proclist\final.$(suffix)W.vc
+	del /s /q plugins\tmppanel\final.$(suffix)W.vc
diff -Nur fardev.orig/plugins/makefile_vc_def_inc fardev/plugins/makefile_vc_def_inc
--- fardev.orig/plugins/makefile_vc_def_inc	Mon Jan 12 16:40:23 2009
+++ fardev/plugins/makefile_vc_def_inc	Sat Feb 28 02:27:51 2009
@@ -127,27 +127,27 @@
 NOWIN98=/OPT:NOWIN98
 !endif
 
+PDBNAME="$(OUTDIR)$(ADDOUTDIR)\$(NAME).pdb"
 !ifndef DEBUG
 CPP_OPT=/DNDEBUG /O1i
 !else
-PDBNAME="$(OUTDIR)$(ADDOUTDIR)\$(NAME).pdb"
-CPP_OPT=/DDEBUG /Od /Fd$(PDBNAME)
+CPP_OPT=/DDEBUG /Od
 !endif
 
 !ifdef AMD64
 COMMONLIB = $(COMMON)\libCRT64.lib
-CPP_PROJ_NO=/nologo /c /W3 /Gy /GF /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD /I"$(COMMON)" /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0502 $(USERCPP)
+CPP_PROJ_NO=/nologo /c /W3 /Gy /GF /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD /I"$(COMMON)" /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0502 $(USERCPP) /Zi /Fd$(PDBNAME)
 ULOUT=-Tpd+
 !elseif defined(IA64)
 COMMONLIB = $(COMMON)\libCRTIA64.lib
-CPP_PROJ_NO=/nologo /c /W3 /Gy /GF /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD /I"$(COMMON)" /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0502 $(USERCPP)
+CPP_PROJ_NO=/nologo /c /W3 /Gy /GF /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD /I"$(COMMON)" /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0502 $(USERCPP) /Zi /Fd$(PDBNAME)
 ULOUT=-Tpd+
 !else
 COMMONLIB = $(COMMON)\libCRT.lib
 !ifdef CPP_UNALIGN
 CPP_ALIGN=/Zp1
 !endif
-CPP_PROJ_NO=/nologo /c /W3 /Gy /GF $(CPP_ALIGN) /J /Gr /GS- /GR- /EHs-c- /LD /I"$(COMMON)" /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0502 $(USERCPP)
+CPP_PROJ_NO=/nologo /c /W3 /Gy /GF $(CPP_ALIGN) /J /Gr /GS- /GR- /EHs-c- /LD /I"$(COMMON)" /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0502 $(USERCPP) /Zi /Fd$(PDBNAME)
 ULOUT=-Tpd -Re
 !endif
 CPP_PROJ=$(CPP_PROJ_NO) /Fo"$(OBJDIR)\\"
@@ -172,15 +172,13 @@
 
 !ifndef ULINK
 LNK=$(_LINK_PATH_)link.exe
-LINK_DEBUG=/pdb:$(PDBNAME)
-CPP_DEBUG=/Zi
 !ifndef NEEDENTRY
 NOENTRY = /noentry
 !endif
 !ifndef NEEDDEFLIB
 NODEFLIB = /nodefaultlib
 !endif
-LINK_FLAGS=/nologo /dll /release /merge:.rdata=.text $(NOWIN98) $(NOENTRY) $(NODEFLIB) $(ENV_LIB_OPT) /def:"$(DEF)" /map:"$(MAP)" /out:"$(DLLFULLNAME)"
+LINK_FLAGS=/nologo /dll /release /merge:.rdata=.text $(NOWIN98) $(NOENTRY) $(NODEFLIB) $(ENV_LIB_OPT) /def:"$(DEF)" /map:"$(MAP)" /out:"$(DLLFULLNAME)" /debug /pdb:$(PDBNAME)
 !else
 LINK_DEBUG=-v
 CPP_DEBUG=/Z7
diff -Nur fardev.orig/unicode_far/findfile.cpp fardev/unicode_far/findfile.cpp
--- fardev.orig/unicode_far/findfile.cpp	Tue Feb 24 21:36:23 2009
+++ fardev/unicode_far/findfile.cpp	Sat Feb 28 02:14:26 2009
@@ -850,8 +850,8 @@
   wchar_t *lpFileName = xf_wcsdup (PanelItem->FindData.lpwszFileName);
   wchar_t *lpFileNameShort = xf_wcsdup (PanelItem->FindData.lpwszAlternateFileName);
 
-  const wchar_t *lpFileNameToFind = PointToName(RemovePseudoBackSlash(lpFileName));
-  const wchar_t *lpFileNameToFindShort = PointToName(RemovePseudoBackSlash(lpFileNameShort));
+  const wchar_t *lpFileNameToFind = PointToName(lpFileName);
+  const wchar_t *lpFileNameToFindShort = PointToName(lpFileNameShort);
 
   if ( CtrlObject->Plugins.GetFindData (
       hPlugin,
@@ -866,11 +866,11 @@
       PluginPanelItem Item = *pItem;
 
       wchar_t *lpwszFileName = xf_wcsdup(NullToEmpty(pItem->FindData.lpwszFileName));
-      Item.FindData.lpwszFileName = xf_wcsdup (PointToName(RemovePseudoBackSlash(lpwszFileName)));
+      Item.FindData.lpwszFileName = xf_wcsdup (PointToName(lpwszFileName));
       xf_free (lpwszFileName);
 
       lpwszFileName = xf_wcsdup(NullToEmpty(pItem->FindData.lpwszAlternateFileName));
-      Item.FindData.lpwszAlternateFileName = xf_wcsdup (PointToName(RemovePseudoBackSlash(lpwszFileName)));
+      Item.FindData.lpwszAlternateFileName = xf_wcsdup (PointToName(lpwszFileName));
       xf_free (lpwszFileName);
 
       if ( !StrCmp (lpFileNameToFind, Item.FindData.lpwszFileName) &&
@@ -1634,8 +1634,7 @@
       string strFileName=FindList[FindExitIndex]->FindData.strFileName;
       Panel *FindPanel=CtrlObject->Cp()->ActivePanel;
 
-      if ((FindList[FindExitIndex]->ArcIndex != LIST_INDEX_NONE) &&
-          (!(ArcList[FindList[FindExitIndex]->ArcIndex]->Flags & OPIF_REALNAMES)))
+      if (FindList[FindExitIndex]->ArcIndex != LIST_INDEX_NONE)
       {
         HANDLE hPlugin = ArcList[FindList[FindExitIndex]->ArcIndex]->hPlugin;
         if (hPlugin == INVALID_HANDLE_VALUE)
@@ -1666,7 +1665,7 @@
               SearchMode==FFSEARCH_ALL ||
               SearchMode==FFSEARCH_ALL_BUTNETWORK ||
               SearchMode==FFSEARCH_INPATH)
-            CtrlObject->Plugins.SetDirectory(hPlugin,L"\\",OPM_FIND);
+            CtrlObject->Plugins.SetDirectory(hPlugin,L"\\",0);
 
           SetPluginDirectory(strFileName,hPlugin,TRUE);
         }
@@ -1739,32 +1738,19 @@
 {
   string strName;
   wchar_t *StartName,*EndName;
-  int IsPluginDir;
 
-  /* $ 19.01.2003 KM
-     Восстановлю поведение до 4 беты. Если в DirName есть
-     символ '\x1' значит это путь из плагина. Таким образом
-     легче определить плагиновые пути и, соответственно,
-     сделать правильный переход.
-  */
   strName = DirName;
-  if ( strName.GetLength() > 0 )
-    IsPluginDir=strName.Contains(L'\x1')?TRUE:FALSE;
-  else
-    IsPluginDir=FALSE;
 
   StartName = strName.GetBuffer();
-  while(IsPluginDir?(EndName=wcschr(StartName,L'\x1'))!=NULL:(EndName=wcschr(StartName,L'\\'))!=NULL)
+  if (*StartName==L'\\')
+  {
+    CtrlObject->Plugins.SetDirectory(hPlugin,L"\\",0);
+    StartName++;
+  }
+  while(EndName=wcschr(StartName,L'\\'))
   {
     *EndName=0;
-    // RereadPlugin
-    {
-      int FileCount=0;
-      PluginPanelItem *PanelData=NULL;
-      if (CtrlObject->Plugins.GetFindData(hPlugin,&PanelData,&FileCount,OPM_FIND))
-        CtrlObject->Plugins.FreeFindData(hPlugin,PanelData,FileCount);
-    }
-    CtrlObject->Plugins.SetDirectory(hPlugin,StartName,OPM_FIND);
+    CtrlObject->Plugins.SetDirectory(hPlugin,StartName,0);
     StartName=EndName+1;
   }
 
@@ -2216,8 +2202,6 @@
   string strPathName;
   strPathName = FullName;
 
-  RemovePseudoBackSlash(strPathName);
-
   CutToSlash(strPathName);
 
   if ( strPathName.IsEmpty() )
@@ -2616,11 +2600,12 @@
   TRY {
 
     Sleep(200);
-    strPluginSearchPath=L"";
     HANDLE hPlugin=ArcList[FindFileArcIndex]->hPlugin;
     struct OpenPluginInfo Info;
     CtrlObject->Plugins.GetOpenPluginInfo(hPlugin,&Info);
     strSaveDir = Info.CurDir;
+    strPluginSearchPath=Info.CurDir;
+    if (!strPluginSearchPath.IsEmpty()) AddEndSlash(strPluginSearchPath);
     WaitForSingleObject(hPluginMutex,INFINITE);
     if (SearchMode==FFSEARCH_ROOT ||
         SearchMode==FFSEARCH_ALL ||
@@ -2704,15 +2689,9 @@
       string strFullName;
       if (StrCmp(strCurName,L".")==0 || TestParentFolderName(strCurName))
         continue;
-      if (Flags & OPIF_REALNAMES)
-      {
-        strFullName = strCurName;
-      }
-      else
-      {
-        strFullName = strPluginSearchPath;
-        strFullName += strCurName;
-      }
+
+      strFullName = strPluginSearchPath;
+      strFullName += strCurName;
 
       /* $ 30.09.2003 KM
         Отфильтруем файлы не попадающие в действующий фильтр
@@ -2727,7 +2706,6 @@
           statusCS.Enter();
 
           strFindMessage = strFullName;
-          RemovePseudoBackSlash(strFindMessage);
           FindMessageReady=TRUE;
 
           statusCS.Leave();
@@ -2757,28 +2735,29 @@
         WaitForSingleObject(hPluginMutex,INFINITE);
 
 				size_t pos;
-        if (!strCurName.Contains(L'\x1') && CtrlObject->Plugins.SetDirectory(hPlugin,strCurName,OPM_FIND))
+        if (CtrlObject->Plugins.SetDirectory(hPlugin,strCurName,OPM_FIND))
         {
           ReleaseMutex(hPluginMutex);
 
           strPluginSearchPath += strCurName;
-          strPluginSearchPath += L"\x1";
+          strPluginSearchPath += L"\\";
           ScanPluginTree(hPlugin, Flags);
-          if (strPluginSearchPath.RPos(pos,L'\x1'))
+          if (strPluginSearchPath.RPos(pos,L'\\'))
             strPluginSearchPath.SetLength(pos);
+          if (strPluginSearchPath.RPos(pos,L'\\'))
+            strPluginSearchPath.SetLength(pos+1);
+          else
+            strPluginSearchPath.SetLength(0);
+
+          WaitForSingleObject(hPluginMutex,INFINITE);
+          if (!CtrlObject->Plugins.SetDirectory(hPlugin,L"..",OPM_FIND))
+            StopSearch=TRUE;
+          ReleaseMutex(hPluginMutex);
         }
-        if (strPluginSearchPath.RPos(pos,L'\x1'))
-          strPluginSearchPath.SetLength(pos+1);
         else
-          strPluginSearchPath.SetLength(0);
-        WaitForSingleObject(hPluginMutex,INFINITE);
-        if (!CtrlObject->Plugins.SetDirectory(hPlugin,L"..",OPM_FIND))
-          StopSearch=TRUE;
-        ReleaseMutex(hPluginMutex);
-        if (StopSearch) break;
+          ReleaseMutex(hPluginMutex);
       }
-      else
-        ReleaseMutex(hPluginMutex);
+      if (StopSearch) break;
     }
   }
   CtrlObject->Plugins.FreeFindData(hPlugin,PanelData,ItemCount);
@@ -3031,25 +3010,4 @@
   //SearchFromRoot[sz-1+MsgLenDiff]=0; //BUGBUG
 
   return strSearchFromRoot;
-}
-
-wchar_t *FindFiles::RemovePseudoBackSlash(wchar_t *FileName)
-{
-	for (int i=0;FileName[i]!=0;i++)
-	{
-		if (FileName[i]==L'\x1')
-			FileName[i]=L'\\';
-	}
-	return FileName;
-}
-
-string &FindFiles::RemovePseudoBackSlash(string &strFileName)
-{
-	wchar_t *lpwszFileName = strFileName.GetBuffer ();
-
-	RemovePseudoBackSlash (lpwszFileName);
-
-	strFileName.ReleaseBuffer ();
-
-	return strFileName;
 }
diff -Nur fardev.orig/unicode_far/findfile.hpp fardev/unicode_far/findfile.hpp
--- fardev.orig/unicode_far/findfile.hpp	Sat Dec 27 17:00:42 2008
+++ fardev/unicode_far/findfile.hpp	Sat Feb 28 01:55:54 2009
@@ -96,8 +96,6 @@
     static int GetPluginFile(DWORD ArcIndex, struct PluginPanelItem *PanelItem,
                              const wchar_t *DestPath, string &strResultName);
     static string &PrepareDriveNameStr(string &strSearchFromRoot,size_t sz);
-    static wchar_t *RemovePseudoBackSlash(wchar_t *FileName);
-    static string &RemovePseudoBackSlash(string &strFileName);
 
   public:
 
diff -Nur fardev.orig/unicode_far/flupdate.cpp fardev/unicode_far/flupdate.cpp
--- fardev.orig/unicode_far/flupdate.cpp	Sun Feb 15 19:41:27 2009
+++ fardev/unicode_far/flupdate.cpp	Sat Feb 28 02:27:51 2009
@@ -724,10 +724,6 @@
 
     //memset(CurListData,0,sizeof(*CurListData));
     PluginToFileListItem(CurPanelData,CurListData);
-    if(Info.Flags & OPIF_REALNAMES)
-    {
-        ConvertNameToShort (CurListData->strName, CurListData->strShortName);
-    }
     CurListData->Position=I;
 
     if ((Info.Flags & OPIF_USESORTGROUPS)/* && (CurListData->FileAttr & FILE_ATTRIBUTE_DIRECTORY)==0*/)
diff -Nur fardev.orig/unicode_far/makefile_vc fardev/unicode_far/makefile_vc
--- fardev.orig/unicode_far/makefile_vc	Tue Feb 24 14:00:06 2009
+++ fardev/unicode_far/makefile_vc	Sat Feb 28 02:27:51 2009
@@ -281,25 +281,25 @@
 	/D "_CRT_NONSTDC_NO_DEPRECATE"\
 	/D "_CRT_NON_CONFORMING_SWPRINTFS"
 
-CPP_PROJ_COMMON=$(MP) $(COMPAT64) /W3 /nologo $(FARSYSLOG) /EHs-c- $(DEFINES) /Gy /GF /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /J /c /FAcs /Fa"$(CODDIR)\\"
-CPP_PROJ_RELEASE=/MT /O2
-CPP_PROJ_DEBUG=/MTd /Od /Zi
+CPP_PROJ_COMMON=$(MP) $(COMPAT64) /W3 /nologo $(FARSYSLOG) /EHs-c- $(DEFINES) /Gy /GF /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /J /c /FAcs /Fa"$(CODDIR)\\" /Zi
+CPP_PROJ_RELEASE=/MT /O2 /GL
+CPP_PROJ_DEBUG=/MTd /Od
 
-LINK_COMMON=$(LINK32_LIBS) /OPT:REF /OPT:ICF $(NOWIN98) /nologo /subsystem:console /def:"$(DEF_FILE)" /out:"$(OUTDIR)\Far.exe" /map:"$(OUTDIR)\far.map" /pdb:"$(OUTDIR)\far.pdb" /release
+LINK_COMMON=$(LINK32_LIBS) $(NOWIN98) /nologo /subsystem:console /def:"$(DEF_FILE)" /out:"$(OUTDIR)\Far.exe" /map:"$(OUTDIR)\far.map" /pdb:"$(OUTDIR)\far.pdb" /release /debug /fixed:no
 
 !if "$(OUTDIR)" == "Release.32.vc"
 
 USEDEBUG=NDEBUG
 
 CPP_PROJ=$(CPP_PROJ_COMMON) $(CPP_PROJ_RELEASE) $(CPP_ADD_32) /Zp4
-LINK32_FLAGS=$(LINK_COMMON) /incremental:no /machine:i386
+LINK32_FLAGS=$(LINK_COMMON) /incremental:no /machine:i386 /OPT:REF /OPT:ICF /LTCG
 
 !elseif "$(OUTDIR)" == "Release.64.vc"
 
 USEDEBUG=NDEBUG
 
 CPP_PROJ=$(CPP_PROJ_COMMON) $(CPP_PROJ_RELEASE) /GS- /GR- /Zp8
-LINK32_FLAGS=$(LINK_COMMON) /incremental:no /machine:amd64
+LINK32_FLAGS=$(LINK_COMMON) /incremental:no /machine:amd64 /OPT:REF /OPT:ICF /LTCG
 ULINK_FLAGS=-Tpe+
 
 !elseif "$(OUTDIR)" == "Release.IA64.vc"
@@ -307,14 +307,14 @@
 USEDEBUG=NDEBUG
 
 CPP_PROJ=$(CPP_PROJ_COMMON) $(CPP_PROJ_RELEASE) /GS- /GR- /Zp8
-LINK32_FLAGS=$(LINK_COMMON) /incremental:no /machine:IA64
+LINK32_FLAGS=$(LINK_COMMON) /incremental:no /machine:IA64 /OPT:REF /OPT:ICF /LTCG
 
 !elseif "$(OUTDIR)" == "Debug.64.vc"
 
 USEDEBUG=_DEBUG
 
 CPP_PROJ=$(CPP_PROJ_COMMON) $(CPP_PROJ_DEBUG) /GS- /GR-
-LINK32_FLAGS=$(LINK_COMMON) /debug /machine:amd64
+LINK32_FLAGS=$(LINK_COMMON) /machine:amd64
 ULINK_FLAGS=-Tpe+ -v
 
 !elseif "$(OUTDIR)" == "Debug.IA64.vc"
@@ -322,14 +322,14 @@
 USEDEBUG=_DEBUG
 
 CPP_PROJ=$(CPP_PROJ_COMMON) $(CPP_PROJ_DEBUG) /GS- /GR-
-LINK32_FLAGS=$(LINK_COMMON) /debug /machine:IA64
+LINK32_FLAGS=$(LINK_COMMON) /machine:IA64
 
 !else
 
 USEDEBUG=_DEBUG
 
 CPP_PROJ=$(CPP_PROJ_COMMON) $(CPP_PROJ_DEBUG) $(CPP_ADD_32)
-LINK32_FLAGS=$(LINK_COMMON) /debug /machine:I386
+LINK32_FLAGS=$(LINK_COMMON) /machine:I386
 ULINK_FLAGS=-v
 
 !endif
